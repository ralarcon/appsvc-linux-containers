# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none

variables:
  vmImageName: ubuntu-latest
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.0.x'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'hello-world-net5/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
        workingDirectory: 'hello-world-net5'
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: 'hello-world-net5/*.csproj'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
        workingDirectory: 'hello-world-net5'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'hello-world-net5'
  
- stage: DeployAppSvcLinux
  displayName: Deploy AppSvc Linux Web
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'VuePoC-Net5-AppSvcLinuxWebApp'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'FTA RALARCON - Azure CXP Internal (cff5d937-9797-41da-b990-ba5295efb820)'
              appType: 'webAppLinux'
              appName: 'ragc-vuepoc-netcore'
              package: '$(Pipeline.Workspace)/hello-world-net5/hello-world-net5.zip'
              runtimeStack: 'DOTNETCORE|5.0'