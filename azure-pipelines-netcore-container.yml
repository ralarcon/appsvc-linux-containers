# Node.js with Vue
# Build a Node.js project that uses Vue.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none

variables:
  vmImageName: ubuntu-latest

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Docker@2
      displayName: Build Container
      inputs:
        containerRegistry: 'ragc-vuepoc-acr'
        repository: 'netcore/hello-world-net5/default'
        command: 'buildAndPush'
        Dockerfile: 'hello-world-net5/Dockerfile'
        buildContext: 'hello-world-net5'
        tags: $(Build.BuildId)
        addPipelineData: true
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'FTA RALARCON - Azure CXP Internal (cff5d937-9797-41da-b990-ba5295efb820)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          ls -la
          az acr build --image netcore/hello-world-net5/default:$(Build.BuildId) --registry ragcvuepoc --file Dockerfile .
        workingDirectory: 'hello-world-net5'


- stage: DeployLinuxContainer
  displayName: Deploy Slim Container
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy Container
    environment: 'VuePoC-Net5-AppSvcLinux-DefaultContainer'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'FTA RALARCON - Azure CXP Internal (cff5d937-9797-41da-b990-ba5295efb820)'
              appName: 'ragc-vuepoc-netcore-container'
              containers: 'ragcvuepoc.azurecr.io/netcore/hello-world-net5/default:$(Build.BuildId)'          


